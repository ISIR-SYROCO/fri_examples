&ACCESS RVP
&REL 218
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM EDITMASK = *
DEF friISIR( )
 ;FOLD ProgramInfo
  ; Copyright 2014 ISIR-CNRS 
  ; Author: Sovannara Hak
 ;ENDFOLD (ProgramInfo)

 ;FOLD INI
  ;FOLD BASISTECH INI
   GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
   INTERRUPT ON 3 
   BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
   ;Make your modifications here
  ;ENDFOLD (USER INI)
 ;ENDFOLD (INI)

 
 ;stop fri in case it is already running
 retVal=FRISTOP()	
 retVal=FRICLOSE()	

 ;Initialisation of shared array
 FOR i=1 to 16
  $FRI_TO_INT[i]=0
  $FRI_TO_REA[i]=0.0
 ENDFOR

 ;Reset $STIFFNESS system variable to default value
 resetSTIFFNESS()
 $FRI_TO_INT[2] = 10 

 BAS(#TOOL,0)
 ;Force to be in T2 mode
 IF $MODE_OP<>#t2 then
  REPEAT
   HALT
   ;****************************************
   ;**** use T2-Mode for safety reasons ****
   ;****************************************
  UNTIL $MODE_OP==#t2
 ENDIF

 ;move to Home-Position
 ;PTP { a1 0,a2 90,a3 0,a4 0,a5 0,a6 0,e1 0}
 
 ;Move to reasonable Startposition 
 PTP {a1 0,a2 87,a3 87,a4 0,a5 -55,a6 0,e1 0}

 ;PTP {a1 0,a2 80,a3 90,a4 0,a5 0,a6 0,e1 0}
 HALT

 ;Test open FRI with datarate 1 msec
 retVal=FRIOPEN(1)

 WAIT FOR ($FriState==#MON)
 ;FRI Monitor Mode flag
 $FRI_TO_INT[1] = 2
 $FRI_TO_INT[2] = 10

 ;Waiting for remote pc to send $FRI_FRM_INT[1]==1    


 WAIT FOR ($FRI_FRM_INT[1]==0)

 REPEAT
  ;$FRI_*_INT[2] is the control strategy
  IF ($FRI_TO_INT[2] <> $FRI_FRM_INT[2]) THEN
   ;New control mode set request
    $FRI_TO_INT[1] = 2

   ;Set new Strategy 
   ISIRSTIFFNESS = $STIFFNESS
   ISIRSTIFFNESS.STRATEGY = $FRI_FRM_INT[2]
   $STIFFNESS = ISIRSTIFFNESS

   $STIFFNESS.COMMIT = TRUE
   $FRI_TO_INT[2] = $FRI_FRM_INT[2]

   ENDIF
 UNTIL ($FRI_FRM_INT[1]==1)	



 WAIT FOR ($FriQuality==#PERFECT)
 ;Argument of FRISTART is a scale to be applied to the robot limits
 retVal=FRISTART(1.0)

 WAIT FOR ($FriState==#CMD)
 ;FRI in command mode
 $FRI_TO_INT[1] = 1

 ;loop while waiting for remote pc to send $FRI_FRM_INT[1]==3
 REPEAT
  ;$FRI_*_INT[2] is the control strategy
  IF ($FRI_TO_INT[2] <> $FRI_FRM_INT[2]) OR ($FRI_TO_INT[3] <> $FRI_FRM_INT[3]) THEN
   ;New control mode set request
   ;Go back to monitor mode if needed
   IF ($FRI_TO_INT[1] == 1) THEN
    retVal = FRISTOP()
    WAIT FOR ($FriState==#MON)
    $FRI_TO_INT[1] = 2
   ENDIF

   ;Set new Strategy 
   ISIRSTIFFNESS = $STIFFNESS
   ISIRSTIFFNESS.STRATEGY = $FRI_FRM_INT[2]

   ;$FRI_FRM_INT[3] = Tool number
   IF ($FRI_TO_INT[3] <> $FRI_FRM_INT[3]) THEN
     ISIRSTIFFNESS.TOOL = TOOL_DATA[$FRI_FRM_INT[3]+1]
     $FRI_TO_INT[3] = $FRI_FRM_INT[3]
   ENDIF

   $STIFFNESS = ISIRSTIFFNESS
   $STIFFNESS.COMMIT = TRUE
   $FRI_TO_INT[2] = $FRI_FRM_INT[2]

   ;Go back to command mode
   retVal = FRISTART(1.0)
   WAIT FOR ($FriState==#CMD)
   $FRI_TO_INT[1] = 1
  ENDIF 

  IF ($FRI_FRM_INT[1] == 2) AND ($FRI_TO_INT[1] == 1) THEN
   ;friStop asked
   PTP CLAMP_AXES($AXIS_ACT_MES)
   retVal=FRISTOP()
   WAIT FOR ($FriState==#MON)
   ;Send monitor mode feedback to remote pc
   $FRI_TO_INT[1] = 2
  ENDIF
  
  IF ($FRI_FRM_INT[1] == 1) AND ($FRI_TO_INT[1] == 2) THEN
   ;fristart asked
   retVal=FRISTART(1.0)
   WAIT FOR ($FriState==#CMD)
   $FRI_TO_INT[1] = 1
  ENDIF

 UNTIL ($FRI_FRM_INT[1] == 3)

 ;Need to clamp in case commands sent by FRI 
 ;hit joint limits
 PTP CLAMP_AXES($AXIS_ACT_MES)

 HALT
 IF ($FRI_TO_INT[1] == 1) THEN
  retVal=FRISTOP()	
  WAIT FOR ($FriState==#MON)
 ENDIF

 $FRI_TO_INT[1]=0
 WAIT SEC 0.5
 retVal = FRICLOSE()

 resetSTIFFNESS()
 ;move to Home-Position
 PTP { a1 0,a2 90,a3 0,a4 0,a5 0,a6 0,e1 0}

END


DEFFCT E6AXIS CLAMP_AXES(ax:IN)
 E6AXIS ax

 DECL E6AXIS an

 an.A1 = CLAMP(ax.A1, -169., 169.)
 an.A2 = CLAMP(ax.A2,  -29., 209.)
 an.E1 = CLAMP(ax.E1, -169., 169.)
 an.A3 = CLAMP(ax.A3, -119., 119.)
 an.A4 = CLAMP(ax.A4, -169., 169.)
 an.A5 = CLAMP(ax.A5, -119., 119.)
 an.A6 = CLAMP(ax.A6, -169., 169.)

 RETURN an
ENDFCT

DEFFCT REAL CLAMP(v:IN, minval:IN, maxval:IN)
 REAL v, minval, maxval
 DECL REAL r

 r = v

 IF v > maxval THEN
  r = maxval
 ENDIF

 IF v < minval THEN
  r = minval
 ENDIF

 RETURN r
ENDFCT