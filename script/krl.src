&ACCESS RVP
&REL 78
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM EDITMASK = *
DEF krl( )
 ;FOLD Info
  ; Copyright 2014 ISIR-CNRS 
  ; Author: Sovannara Hak
 ;ENDFOLD (Info)

 ;FOLD INI
  ;FOLD BASISTECH INI
   GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
   INTERRUPT ON 3 
   BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
   ;Make your modifications here
  ;ENDFOLD (USER INI)
 ;ENDFOLD (INI)

 ;stop fri in case it is already running
 retVal=FRISTOP()	

 ;Initialisation of shared array
 FOR i=1 to 16
  $FRI_TO_INT[i]=0
  $FRI_TO_REA[i]=0.0
 ENDFOR

 ;Initialisation of variables for FRI
 $STIFFNESS.BASE = {X 0, Y 0, Z 0, A 0, B 0, C 0} 
 $STIFFNESS.TOOL = TOOL_DATA[1]

 ;Force to be in T1 mode
 IF $MODE_OP<>#t1 then
  REPEAT
   HALT
   ;****************************************
   ;**** use T1-Mode for safety reasons ****
   ;****************************************
  UNTIL $MODE_OP==#t1
 ENDIF

 ;move to Home-Position
 PTP { a1 0,a2 90,a3 0,a4 0,a5 0,a6 0,e1 0}
 
 ;Move to reasonable Startposition 
 PTP {a1 0,a2 87,a3 87,a4 0,a5 -55,a6 0,e1 0}
 HALT

 ;Test open FRI with datarate 20 msec
 retVal=FRIOPEN(20)
 WAIT FOR ($FriState==#MON)

 ;Waiting for remote pc to send $FRI_FRM_INT[1]==1    
 WAIT FOR ($FRI_FRM_INT[1]==1)	

 WAIT FOR ($FriQuality==#PERFECT)
 retVal=FRISTART(1.0)
 WAIT FOR ($FriState==#CMD)

 ;Control strategy mode is stored in $FRI_FRM_INT[2]
 prevCtrlMode = $FRI_FRM_INT[2]
 ;loop while waiting for remote pc to send $FRI_FRM_INT[1]==2
 REPEAT
  HALT
  IF (prevCtrlMode <> $FRI_FRM_INT[2])
   ;New control mode set
   $STIFFNESS.STRATEGY = $FRI_FRM_INT[2]
   $STIFFNESS.COMMIT = TRUE
   prevCtrlMode = $FRI_FRM_INT[2]
  ENDIF 
 UNTIL $FRI_FRM_INT[1]==2

 ;Need to clamp in case commands sent by FRI 
 ;hit joint limits
 PTP CLAMP_AXES($AXIS_ACT_MES)

 HALT
 retVal=FRISTOP()	
 WAIT FOR ($FriState==#MON)

 $FRI_TO_INT[1]=0
 WAIT SEC 0.5
 retVal = FRICLOSE()

 ;move to Home-Position
 PTP { a1 0,a2 90,a3 0,a4 0,a5 0,a6 0,e1 0}

END


DEFFCT E6AXIS CLAMP_AXES(ax:IN)
 E6AXIS ax

 DECL E6AXIS an

 an.A1 = CLAMP(ax.A1, -169., 169.)
 an.A2 = CLAMP(ax.A2,  -29., 209.)
 an.E1 = CLAMP(ax.E1, -169., 169.)
 an.A3 = CLAMP(ax.A3, -119., 119.)
 an.A4 = CLAMP(ax.A4, -169., 169.)
 an.A5 = CLAMP(ax.A5, -119., 119.)
 an.A6 = CLAMP(ax.A6, -169., 169.)

 RETURN an
ENDFCT

DEFFCT REAL CLAMP(v:IN, minval:IN, maxval:IN)
 REAL v, minval, maxval
 DECL REAL r

 r = v

 IF v > maxval THEN
  r = maxval
 ENDIF

 IF v < minval THEN
  r = minval
 ENDIF

 RETURN r
ENDFCT
